server
"import react from 'react'
import express from 'express'
import dotenv from 'dotenv'
import cors from 'cors'
import mongoose from 'mongoose'

dotenv.config()
const app = express()
app.use(express.json())
app.use(cors())
const dbConnection=async()=>{
    if(await mongoose.connect(process.env.MONGO_URL)){
        console.log("Connected to MongoDB")
    }

}
dbConnection();
const port=process.env.PORT||3000
app.listen(port,()=>{
    console.log(`Server is running on port ${port}`)
})

app.post("/registerUser",async (req,res) =>{
    const {
        name,
        email,
        password,
        gender,
        age,
        mobile,

    }=req.body
    const user=new User({
        name,
        email,
        password,
        gender,
        age,
        mobile,
    })
    const savedUser=await user.save()
    res.json({
        success:true,
        message:"User created successfully",
        user:savedUser
    })

})

env
MONGO_URL=mongodb+srv://harshalpatilcsn2020:nB6HXNZFdl9jzwJb@cluster0.iwpkfpp.mongodb.net~/pathology
PORT=5051

Users.jsx
import { Schema,model } from "mongoose";

const userSchema=new Schema({
    name:{
        type:String,
        required:true
    },
    email:{
        type:String,
        required:true,
        unique:true

    },
    password:{
        type:String,
        required:true,
    },
    address:{
        type:String,
        required:true,

    },
    mobile:{
        required:true,
        type:num
    },
    gender:{
        type:String,
        required:true,
        enum:['Male','Female','Others'],
        default:'Male'
    }
},{
    timestamps:true
})

const User=model('User',userSchema);
export default User

Appointments.jsx
import { Schema,model } from "mongoose";

const appointmentSchema=new Schema({
    name:{
        type:String,
        required: true

    },
    appointmentdate:{
        type:Date,
        required:true,
        default:Date.now,
    },
    status:{
        type:String,
        enum: ['pending', 'confirmed', 'cancelled'],
        default: 'pending',
    },
    completedAt:{
        type:Date
    },
   cancelledAt:{
        type:Date
    },
    note:{
        type:String
    },
    age:{
        type:num,
        required:true
    },
    gender:{
        type:String,
        enum:['male', 'female','others'],
        default:'male'
    },
    test:{
        type:String,
        required:true
    }

},{
    timestamps:true
})

const Appointment=model('Appointment',appointmentSchema);
module.exports=Appointment;



Admin.jsx

import { Schema,model } from "mongoose";

const adminSchema=new Schema({
    name:{
        type:String,
        required:true
    },
    mobile:{
       type:num,
       required:true
    },
    email:{
        required:true,
        type:String,
        unique:true
    },
    password:{
        type:String,
        required:true
    }
},{
    timestamps:true
})

const Admin=model('Admin',adminSchema);
export default Admin